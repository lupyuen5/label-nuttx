#### Comment
name: Arch

on:
  workflow_call:
    inputs:
      os:
        description: "TODO" ####
        required: true
        type: string
      board:
        description: "TODO" ####
        required: true
        type: string
      boards:
        description: "TODO" ####
        required: true
        type: string
    outputs:
      skip_build:
        description: "Set to 1 if the build should be skipped"
        value: ${{ jobs.Select-Builds.outputs.skip_build }}
      selected_builds:
        description: "TODO" ####
        value: ${{ jobs.Select-Builds.outputs.selected_builds }}

jobs:

  #### Comment
  # Get the Arch for the PR: arm, arm64, risc-v, xtensa, ...
  Select-Builds:
    #### name: Arch
    runs-on: ubuntu-latest
    outputs:
      #### Remove
      skip_build: ${{ steps.get-arch.outputs.skip_build }}
      selected_builds: ${{ steps.select-builds.outputs.selected_builds }}
    steps:
      - name: Get arch
        id: get-arch
        run: |        
          # Get the Labels for the PR: "Arch: risc-v \n Size: XS"
          pr=${{github.event.pull_request.number}}
          ##### Remove
          pr=1
          if [[ "$pr" == "" ]]; then
            exit
          fi
          labels=$(gh pr view $pr --repo $GITHUB_REPOSITORY --json labels --jq '.labels[] | .name')
          numlabels=$(gh pr view $pr --repo $GITHUB_REPOSITORY --json labels --jq '.[] | length')
          echo "numlabels=$numlabels" >> $GITHUB_OUTPUT

          # Identify the Size and Arch Labels
          if [[ "$labels" == *"Size: "* ]]; then
            echo 'labels_contain_size=1' >> $GITHUB_OUTPUT
          fi
          if [[ "$labels" == *"Arch: arm"* ]]; then
            echo 'arch_contains_arm_arm64=1' >> $GITHUB_OUTPUT
          elif [[ "$labels" == *"Arch: risc-v"* ]]; then
            echo 'arch_contains_riscv=1' >> $GITHUB_OUTPUT
          #### TODO: Arch: simulator -> arch_contains_sim
          #### TODO: Arch: x86_64 -> arch_contains_x86_64
          elif [[ "$labels" == *"Arch: xtensa"* ]]; then
            echo 'arch_contains_xtensa=1' >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Select builds
        id: select-builds
        run: |
          arch_contains_arm_arm64=${{ steps.get-arch.outputs.arch_contains_arm_arm64 }}
          arch_contains_riscv=${{ steps.get-arch.outputs.arch_contains_riscv }}
          arch_contains_sim=${{ steps.get-arch.outputs.arch_contains_sim }}
          arch_contains_x86_64=${{ steps.get-arch.outputs.arch_contains_x86_64 }}
          arch_contains_xtensa=${{ steps.get-arch.outputs.arch_contains_xtensa }}
          labels_contain_size=${{ steps.get-arch.outputs.labels_contain_size }}
          numlabels=${{ steps.get-arch.outputs.numlabels }}
          numboards=$( echo '${{ inputs.boards }}' | jq "length" )

          #### Remove
          echo numboards=$numboards
          echo numlabels=$numlabels
          echo labels_contain_size=$labels_contain_size
          echo arch_contains_arm_arm64=$arch_contains_arm_arm64
          echo arch_contains_riscv=$arch_contains_riscv

          # We consider only PRs with 2 labels, including size
          if [[ "$numlabels" != "2" || "$labels_contain_size" != "1" ]]; then
            echo selected_builds='${{ inputs.boards }}' >> $GITHUB_OUTPUT
            exit
          fi

          #### Comment
          for (( i=0; i<numboards; i++ ))
          do 
            board=$( echo '${{ inputs.boards }}' | jq ".[$i]" )
            echo board=$board ####
            skip_build=0
            
            # If "Arch: arm / arm64" is the only non-size label, then build other, arm-01, arm-02, ...
            if [[ "$arch_contains_arm_arm64" == "1" ]]; then
              if [[ "$board" != *"arm"* && "$board" != *"other"* ]]; then
                skip_build=1
              fi
  
            # If "Arch: risc-v" is the only non-size label, then build risc-v-01, risc-v-02
            elif [[ "$arch_contains_riscv" == "1" ]]; then
              if [[ "$board" != *"risc-v"* ]]; then
                skip_build=1
              fi
  
            #### TODO: arch_contains_sim
            #### TODO: arch_contains_x86_64
  
            # If "Arch: xtensa" is the only non-size label, then build xtensa-01, xtensa-02
            elif [[ "$arch_contains_xtensa" == "1" ]]; then
              if [[ "$board" != *"xtensa"* ]]; then
                skip_build=1
              fi
  
            #### TODO
            else
              echo Allow build: $board
            fi
  
            #### TODO Comment
            if [[ "$skip_build" == "0" ]]; then
              echo Add $board to selected_builds
              if [[ "$selected_builds" == "" ]]; then
                selected_builds=$board
              else
                selected_builds=$selected_builds,$board
              fi
            fi
          done

          # Return the selected builds
          echo "selected_builds=[$selected_builds]" >> $GITHUB_OUTPUT

#### Comment
name: Arch

on:
  workflow_call:
    inputs:
      os:
        description: "TODO" ####
        required: true
        type: string
      board:
        description: "TODO" ####
        required: true
        type: string
      boards:
        description: "TODO" ####
        required: true
        type: string
    outputs:
      skip_build:
        description: "Set to 1 if the build should be skipped"
        value: ${{ jobs.Select-Builds.outputs.skip_build }}
      selected_builds:
        description: "TODO" ####
        value: ${{ jobs.Select-Builds.outputs.selected_builds }}

jobs:

  #### Comment
  # Get the Arch for the PR: arm, arm64, risc-v, xtensa, ...
  Select-Builds:
    #### name: Arch
    runs-on: ubuntu-latest
    outputs:
      skip_build: ${{ steps.get-arch.outputs.skip_build }}
      selected_builds: ${{ steps.get-arch.outputs.selected_builds }}
    steps:
      - name: Get arch
        id: get-arch
        run: |        
          # Get the Labels for the PR: "Arch: risc-v \n Size: XS"
          pr=${{github.event.pull_request.number}}
          if [[ "$pr" == "" ]]; then
            exit
          fi
          labels=$(gh pr view $pr --repo $GITHUB_REPOSITORY --json labels --jq '.labels[] | .name')
          numlabels=$(gh pr view $pr --repo $GITHUB_REPOSITORY --json labels --jq '.[] | length')
          echo "numlabels=$numlabels" >> $GITHUB_OUTPUT

          # Identify the Size and Arch Labels
          if [[ "$labels" == *"Size: "* ]]; then
            echo 'labels_contain_size=1' >> $GITHUB_OUTPUT
          fi
          if [[ "$labels" == *"Arch: arm"* ]]; then
            echo 'arch_contains_arm_arm64=1' >> $GITHUB_OUTPUT
          fi
          if [[ "$labels" == *"Arch: risc-v"* ]]; then
            echo 'arch_contains_riscv=1' >> $GITHUB_OUTPUT
          fi
          if [[ "$labels" == *"Arch: xtensa"* ]]; then
            echo 'arch_contains_xtensa=1' >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Select builds
        id: select-builds
        run: |
          #### Remove
          echo "boards=${{ fromJSON(inputs.boards) }}"
          echo "boards[0]=${{ fromJSON(inputs.boards)[0] }}"
          echo "boards[1]=${{ fromJSON(inputs.boards)[1] }}"
          echo "boards[2]=${{ fromJSON(inputs.boards)[2] }}"
          echo 'selected_builds=["arm-01", "arm-02", "arm-03"]' >> $GITHUB_OUTPUT
          echo boards[1]
          echo '${{ inputs.boards }}' | jq ".[1]"
          echo boards.length
          echo '${{ inputs.boards }}' | jq "length"

          numlabels=${{ steps.get-arch.outputs.numlabels }}
          labels_contain_size=${{ steps.get-arch.outputs.labels_contain_size }}
          #### Remove
          echo numlabels=$numlabels
          echo labels_contain_size=$labels_contain_size

          # We consider only PRs with 2 labels, including size
          if [ $numlabels -ne 2 ] || [ $labels_contain_size -ne 1 ]; then
            exit
          fi
          
          # If "Arch: arm / arm64" is the only non-size label, then build other, arm-01, arm-02, ...
          if [[ "$arch_contains_arm_arm64" == "1" ]]; then
            if [[ "${{inputs.board}}" == "arm"* ]] || [[ "${{inputs.board}}" == "other"* ]]; then
              echo Allow build: ${{inputs.board}}
            else
              echo Skip build: ${{inputs.board}}
              echo "skip_build=1" >> $GITHUB_OUTPUT
            fi
          fi

          # If "Arch: risc-v" is the only non-size label, then build risc-v-01, risc-v-02
          if [[ "$arch_contains_riscv" == "1" ]]; then
            if [[ "${{inputs.board}}" == "risc-v"* ]]; then
              echo Allow build: ${{inputs.board}}
            else
              echo Skip build: ${{inputs.board}}
              echo "skip_build=1" >> $GITHUB_OUTPUT
            fi
          fi

          # If "Arch: xtensa" is the only non-size label, then build xtensa-01, xtensa-02
          if [[ "$arch_contains_xtensa" == "1" ]]; then
            if [[ "${{inputs.board}}" == "xtensa"* ]]; then
              echo Allow build: ${{inputs.board}}
            else
              echo Skip build: ${{inputs.board}}
              echo "skip_build=1" >> $GITHUB_OUTPUT
            fi
          fi
